volumes:
  postgres_volume:
  prometheus_data:
  grafana_data:
  redis_data:

services:
  pg-auth:
    image: postgres:14-alpine3.19
    environment:
      - "POSTGRES_DB=${PG_DATABASE_NAME}"
      - "POSTGRES_USER=${PG_USER}"
      - "POSTGRES_PASSWORD=${PG_PASSWORD}"
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data

  migrator:
    build:
      context: .
      dockerfile: migration.Dockerfile
    restart: on-failure
    depends_on:
      - pg-auth
    volumes:
      - ./migrations:/root/migrations
    environment:
      - DB_HOST=pg-auth
      - MIGRATION_DIR=./migrations

  prometheus:
    image: prom/prometheus:v2.45.6
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./metrics/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana-oss:10.0.3
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  jaeger:
    image: jaegertracing/all-in-one:1.55
    ports:
      - "16686:16686"    # Web UI
      - "14250:14250"    # Collector gRPC
      - "14268:14268"    # Collector HTTP
      - "6831:6831/udp"  # Agent UDP (Jaeger thrift)
      - "6832:6832/udp"  # Agent UDP (TChannel)
      - "5778:5778"      # Agent HTTP

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_INIT_LIMIT: 3
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - kafka-net

  kafka1:
      image: confluentinc/cp-kafka:7.7.1
      hostname: kafka1
      container_name: kafka1
      depends_on:
        - zookeeper
      ports:
        - "9091:9091"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091,PLAINTEXT_HOST://localhost:9091
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29091,PLAINTEXT_HOST://0.0.0.0:9091
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      networks:
        - kafka-net

  kafka2:
      image: confluentinc/cp-kafka:7.7.1
      hostname: kafka2
      container_name: kafka2
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 2
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      networks:
        - kafka-net

  kafka3:
      image: confluentinc/cp-kafka:7.7.1
      hostname: kafka3
      container_name: kafka3
      depends_on:
        - zookeeper
      ports:
        - "9093:9093"
      environment:
        KAFKA_BROKER_ID: 3
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29093,PLAINTEXT_HOST://localhost:9093
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29093,PLAINTEXT_HOST://0.0.0.0:9093
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      networks:
        - kafka-net

  kafka-ui:
      container_name: kafka-ui
      image: provectuslabs/kafka-ui:latest
      ports:
        - 9020:8080
      environment:
        AUTH_TYPE: DISABLED
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29091,kafka2:29092,kafka3:29093
        KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      depends_on:
        - kafka1
        - kafka2
        - kafka3
      networks:
        - kafka-net

networks:
  kafka-net:
    driver: bridge